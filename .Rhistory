#remove rows with only nas
genes_lab <- genes_lab[,colSums(is.na(genes_lab))<nrow(genes_lab)]
#remove colums with only nas
genes_lab <- genes_lab[rowSums(is.na(genes_lab)) != ncol(genes_lab), ]
genes_lab <- unique(genes_lab)
#select same rows in the first table
gene_lab_mouse <- gene_lab_mouse[row.names(genes_lab), ]
##select same rows in the first table
lab <- lab[row.names(genes_lab), ]
hm_genes <- rbind(gene_lab_mouse, genes_mouse_field)
hm_selection_g <- rbind(lab, field)
genes <- hm_genes #%>%
# dplyr::select(-Mouse_ID)
# looking at patterns of nas
#pattern_na <-as.data.frame(md.pattern(field_genes))
sapply(hm_genes, function(x) sum(is.na(x)))
#had to remove as they were disturbing the imputation: Worms_presence, MC.Eimeria.FEC,  Heligmosomoides_polygurus, Zfy2, Y,  MpiC,
#vis_miss(field)
# The frequency distribution of the missing cases per variable can be obtained
# as:
init <- mice(genes, maxit = 0)
#we want to impute only the specific variables
meth <- init$method
aggr_plot <- aggr(hm_genes, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(hm_genes), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
marginplot(hm_genes[c(4,5)])
# m=5 refers to the number of imputed datasets. Five is the default value.
igf <- mice(genes, m = 5, seed = 500) # method = meth,
summary(igf)
# to check each column with imputed data
## igf$imp$IFNy
#Now we can get back the completed dataset using the complete()
complete_genes <- complete(igf, 1)
#sapply(complete_field, function(x) sum(is.na(x)))
#visualize missingness
vis_dat(complete_genes)
#remove the non imputed genes from our data set
hm_selection_g <- hm_selection_g %>%
dplyr::select(-c("IFNy", "CXCR3", "IL.6", "IL.13", "IL.10",
"IL1RN","CASP1", "CXCL9", "IDO1", "IRGM1", "MPO",
"MUC2", "MUC5AC", "MYD88", "NCR1", "PRF1", "RETNLB", "SOCS1",
"TICAM1", "TNF"))
# add the new imputed genes to the data
hm_selection_g <- cbind(hm_selection_g, complete_genes)
plot(igf)
library(mice)
library(tidyr)
library(tidyverse)
library(VIM)
library(fitdistrplus)
library(fitur)
library(visdat)
setwd("~/GitHub/Eimeria_mouse_immunity/")
hm <- read.csv("output_data/1.MICE_cleaned_data.csv")
# Vectors for selecting genes
#Lab genes
# The measurements of IL.12 and IRG6 are done with an other assay and will
#ignore for now
Gene_lab   <- c("IFNy", "CXCR3", "IL.6", "IL.13", "IL.10",
"IL1RN","CASP1", "CXCL9", "IDO1", "IRGM1", "MPO",
"MUC2", "MUC5AC", "MYD88", "NCR1", "PRF1", "RETNLB", "SOCS1",
"TICAM1", "TNF") #"IL.12", "IRG6")
Genes_wild   <- c("IFNy", "CXCR3", "IL.6", "IL.13", "IL.10",
"IL1RN","CASP1", "CXCL9", "IDO1", "IRGM1", "MPO",
"MUC2", "MUC5AC", "MYD88", "NCR1", "PRF1", "RETNLB", "SOCS1",
"TICAM1", "TNF") #, "IL.12", "IRG6")
Facs_lab <- c("CD4", "Treg", "Div_Treg", "Treg17", "Th1",
"Div_Th1", "Th17", "Div_Th17", "CD8", "Act_CD8",
"Div_Act_CD8", "IFNy_CD4", "IFNy_CD8","Treg_prop",
"IL17A_CD4")
Facs_wild <- c( "Treg", "CD4", "Treg17", "Th1", "Th17", "CD8")
# data imputation
# Genes
field <- hm %>%
dplyr::filter(origin == "Field")
field <- unique(field)
genes_mouse_field <- field %>%
dplyr::select(c(Mouse_ID, all_of(Genes_wild)))
genes <- genes_mouse_field  %>%
dplyr::select(-Mouse_ID)
#remove rows with only nas
genes <- genes[,colSums(is.na(genes))<nrow(genes)]
#remove colums with only nas
genes <- genes[rowSums(is.na(genes)) != ncol(genes), ]
genes_mouse_field <- genes_mouse_field[row.names(genes), ]
##select same rows in the first table
field <- field[row.names(genes), ]
###############lab
#select the genes and lab muce
lab <- hm %>%
dplyr::filter(origin == "Lab", Position == "mLN") #selecting for mln to avoid
# duplicates
lab <- unique(lab)
gene_lab_mouse <- lab %>%
dplyr::select(c(Mouse_ID, all_of(Gene_lab)))
gene_lab_mouse <- unique(gene_lab_mouse)
genes_lab <- gene_lab_mouse[, -1]
#remove rows with only nas
genes_lab <- genes_lab[,colSums(is.na(genes_lab))<nrow(genes_lab)]
#remove colums with only nas
genes_lab <- genes_lab[rowSums(is.na(genes_lab)) != ncol(genes_lab), ]
genes_lab <- unique(genes_lab)
#select same rows in the first table
gene_lab_mouse <- gene_lab_mouse[row.names(genes_lab), ]
##select same rows in the first table
lab <- lab[row.names(genes_lab), ]
hm_genes <- rbind(gene_lab_mouse, genes_mouse_field)
hm_selection_g <- rbind(lab, field)
genes <- hm_genes #%>%
# dplyr::select(-Mouse_ID)
# looking at patterns of nas
#pattern_na <-as.data.frame(md.pattern(field_genes))
sapply(hm_genes, function(x) sum(is.na(x)))
#had to remove as they were disturbing the imputation: Worms_presence, MC.Eimeria.FEC,  Heligmosomoides_polygurus, Zfy2, Y,  MpiC,
#vis_miss(field)
# The frequency distribution of the missing cases per variable can be obtained
# as:
init <- mice(genes, maxit = 0)
#we want to impute only the specific variables
meth <- init$method
aggr_plot <- aggr(hm_genes, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(hm_genes), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
marginplot(hm_genes[c(4,5)])
# m=5 refers to the number of imputed datasets. Five is the default value.
igf <- mice(genes, m = 5, seed = 500) # method = meth,
summary(igf)
# to check each column with imputed data
## igf$imp$IFNy
#Now we can get back the completed dataset using the complete()
complete_genes <- complete(igf, 1)
#sapply(complete_field, function(x) sum(is.na(x)))
#visualize missingness
vis_dat(complete_genes)
#remove the non imputed genes from our data set
hm_selection_g <- hm_selection_g %>%
dplyr::select(-c("IFNy", "CXCR3", "IL.6", "IL.13", "IL.10",
"IL1RN","CASP1", "CXCL9", "IDO1", "IRGM1", "MPO",
"MUC2", "MUC5AC", "MYD88", "NCR1", "PRF1", "RETNLB", "SOCS1",
"TICAM1", "TNF"))
# add the new imputed genes to the data
hm_selection_g <- cbind(hm_selection_g, complete_genes)
plot(igf)
plot(igf)
xyplot(igf, IFNy ~ IL.13 + IRGM1 + MUC2, pch=18,cex=1)
xyplot(igf,IFNy ~ IL.10 + PRF1 + CASP1, pch=18,cex=1)
stripplot(igf, pch = 20, cex = 1.2)
densityplot(igf, height = 1000, width = 800)
library(mice)
library(tidyr)
library(tidyverse)
library(VIM)
library(fitdistrplus)
library(fitur)
library(visdat)
setwd("~/GitHub/Eimeria_mouse_immunity/")
hm <- read.csv("output_data/1.MICE_cleaned_data.csv")
# Vectors for selecting genes
#Lab genes
# The measurements of IL.12 and IRG6 are done with an other assay and will
#ignore for now
Gene_lab   <- c("IFNy", "CXCR3", "IL.6", "IL.13", "IL.10",
"IL1RN","CASP1", "CXCL9", "IDO1", "IRGM1", "MPO",
"MUC2", "MUC5AC", "MYD88", "NCR1", "PRF1", "RETNLB", "SOCS1",
"TICAM1", "TNF") #"IL.12", "IRG6")
Genes_wild   <- c("IFNy", "CXCR3", "IL.6", "IL.13", "IL.10",
"IL1RN","CASP1", "CXCL9", "IDO1", "IRGM1", "MPO",
"MUC2", "MUC5AC", "MYD88", "NCR1", "PRF1", "RETNLB", "SOCS1",
"TICAM1", "TNF") #, "IL.12", "IRG6")
Facs_lab <- c("CD4", "Treg", "Div_Treg", "Treg17", "Th1",
"Div_Th1", "Th17", "Div_Th17", "CD8", "Act_CD8",
"Div_Act_CD8", "IFNy_CD4", "IFNy_CD8","Treg_prop",
"IL17A_CD4")
Facs_wild <- c( "Treg", "CD4", "Treg17", "Th1", "Th17", "CD8")
# data imputation
# Genes
field <- hm %>%
dplyr::filter(origin == "Field")
field <- unique(field)
genes_mouse_field <- field %>%
dplyr::select(c(Mouse_ID, all_of(Genes_wild)))
genes <- genes_mouse_field  %>%
dplyr::select(-Mouse_ID)
#remove rows with only nas
genes <- genes[,colSums(is.na(genes))<nrow(genes)]
#remove colums with only nas
genes <- genes[rowSums(is.na(genes)) != ncol(genes), ]
genes_mouse_field <- genes_mouse_field[row.names(genes), ]
##select same rows in the first table
field <- field[row.names(genes), ]
###############lab
#select the genes and lab muce
lab <- hm %>%
dplyr::filter(origin == "Lab", Position == "mLN") #selecting for mln to avoid
# duplicates
lab <- unique(lab)
gene_lab_mouse <- lab %>%
dplyr::select(c(Mouse_ID, all_of(Gene_lab)))
gene_lab_mouse <- unique(gene_lab_mouse)
genes_lab <- gene_lab_mouse[, -1]
#remove rows with only nas
genes_lab <- genes_lab[,colSums(is.na(genes_lab))<nrow(genes_lab)]
#remove colums with only nas
genes_lab <- genes_lab[rowSums(is.na(genes_lab)) != ncol(genes_lab), ]
genes_lab <- unique(genes_lab)
#select same rows in the first table
gene_lab_mouse <- gene_lab_mouse[row.names(genes_lab), ]
##select same rows in the first table
lab <- lab[row.names(genes_lab), ]
hm_genes <- rbind(gene_lab_mouse, genes_mouse_field)
hm_selection_g <- rbind(lab, field)
genes <- hm_genes %>%
dplyr::select(-Mouse_ID)
# looking at patterns of nas
#pattern_na <-as.data.frame(md.pattern(field_genes))
sapply(hm_genes, function(x) sum(is.na(x)))
#had to remove as they were disturbing the imputation: Worms_presence, MC.Eimeria.FEC,  Heligmosomoides_polygurus, Zfy2, Y,  MpiC,
#vis_miss(field)
# The frequency distribution of the missing cases per variable can be obtained
# as:
init <- mice(genes, maxit = 0)
#we want to impute only the specific variables
meth <- init$method
aggr_plot <- aggr(hm_genes, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(hm_genes), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
marginplot(hm_genes[c(4,5)])
# m=5 refers to the number of imputed datasets. Five is the default value.
igf <- mice(genes, m = 5, seed = 500) # method = meth,
summary(igf)
# to check each column with imputed data
## igf$imp$IFNy
#Now we can get back the completed dataset using the complete()
complete_genes <- complete(igf, 1)
#sapply(complete_field, function(x) sum(is.na(x)))
#visualize missingness
vis_dat(complete_genes)
#remove the non imputed genes from our data set
hm_selection_g <- hm_selection_g %>%
dplyr::select(-c("IFNy", "CXCR3", "IL.6", "IL.13", "IL.10",
"IL1RN","CASP1", "CXCL9", "IDO1", "IRGM1", "MPO",
"MUC2", "MUC5AC", "MYD88", "NCR1", "PRF1", "RETNLB", "SOCS1",
"TICAM1", "TNF"))
# add the new imputed genes to the data
hm_selection_g <- cbind(hm_selection_g, complete_genes)
stripplot(igf, pch = 20, cex = 1.2)
densityplot(igf, height = 1000, width = 800)
library(mice)
library(tidyr)
library(tidyverse)
library(VIM)
library(fitdistrplus)
library(fitur)
library(visdat)
setwd("~/GitHub/Eimeria_mouse_immunity/")
hm <- read.csv("output_data/1.MICE_cleaned_data.csv")
# Vectors for selecting genes
#Lab genes
# The measurements of IL.12 and IRG6 are done with an other assay and will
#ignore for now
Gene_lab   <- c("IFNy", "CXCR3", "IL.6", "IL.13", "IL.10",
"IL1RN","CASP1", "CXCL9", "IDO1", "IRGM1", "MPO",
"MUC2", "MUC5AC", "MYD88", "NCR1", "PRF1", "RETNLB", "SOCS1",
"TICAM1", "TNF") #"IL.12", "IRG6")
Genes_wild   <- c("IFNy", "CXCR3", "IL.6", "IL.13", "IL.10",
"IL1RN","CASP1", "CXCL9", "IDO1", "IRGM1", "MPO",
"MUC2", "MUC5AC", "MYD88", "NCR1", "PRF1", "RETNLB", "SOCS1",
"TICAM1", "TNF") #, "IL.12", "IRG6")
Facs_lab <- c("CD4", "Treg", "Div_Treg", "Treg17", "Th1",
"Div_Th1", "Th17", "Div_Th17", "CD8", "Act_CD8",
"Div_Act_CD8", "IFNy_CD4", "IFNy_CD8","Treg_prop",
"IL17A_CD4")
Facs_wild <- c( "Treg", "CD4", "Treg17", "Th1", "Th17", "CD8")
# data imputation
# Genes
field <- hm %>%
dplyr::filter(origin == "Field")
field <- unique(field)
genes_mouse_field <- field %>%
dplyr::select(c(Mouse_ID, all_of(Genes_wild)))
genes <- genes_mouse_field  %>%
dplyr::select(-Mouse_ID)
#remove rows with only nas
genes <- genes[,colSums(is.na(genes))<nrow(genes)]
#remove colums with only nas
genes <- genes[rowSums(is.na(genes)) != ncol(genes), ]
genes_mouse_field <- genes_mouse_field[row.names(genes), ]
##select same rows in the first table
field <- field[row.names(genes), ]
###############lab
#select the genes and lab muce
lab <- hm %>%
dplyr::filter(origin == "Lab", Position == "mLN") #selecting for mln to avoid
# duplicates
lab <- unique(lab)
gene_lab_mouse <- lab %>%
dplyr::select(c(Mouse_ID, all_of(Gene_lab)))
gene_lab_mouse <- unique(gene_lab_mouse)
genes_lab <- gene_lab_mouse[, -1]
#remove rows with only nas
genes_lab <- genes_lab[,colSums(is.na(genes_lab))<nrow(genes_lab)]
#remove colums with only nas
genes_lab <- genes_lab[rowSums(is.na(genes_lab)) != ncol(genes_lab), ]
genes_lab <- unique(genes_lab)
#select same rows in the first table
gene_lab_mouse <- gene_lab_mouse[row.names(genes_lab), ]
##select same rows in the first table
lab <- lab[row.names(genes_lab), ]
hm_genes <- rbind(gene_lab_mouse, genes_mouse_field)
hm_selection_g <- rbind(lab, field)
glimpse(hm_genes)
genes <- hm_genes %>%
dplyr::select(-Mouse_ID)
#had to remove as they were disturbing the imputation: Worms_presence, MC.Eimeria.FEC,  Heligmosomoides_polygurus, Zfy2, Y,  MpiC,
#vis_miss(field)
# The frequency distribution of the missing cases per variable can be obtained
# as:
init <- mice(genes, maxit = 0)
# m=5 refers to the number of imputed datasets. Five is the default value.
igf <- mice(genes, m = 5, seed = 500) # method = meth,
summary(igf)
densityplot(igf, height = 1000, width = 800)
stripplot(igf, pch = 20, cex = 1.2)
stripplot(igf, pch = 20, cex = 1.2)
setwd("GitHub/Eimeria_mouse_immunity/")
knitr::opts_chunk$set(
echo = FALSE, # By default, hide code; set to TRUE to see code
fig.pos = 'th', # Places figures at top or here
out.width = '100%', dpi = 300, # Figure resolution and size
fig.env="figure"
) # Latex figure environment
options(knitr.table.format = "latex") # For kable tables to write LaTeX table directly
hm <- read.csv("output_data/1.MICE_cleaned_data.csv")
length(hm %>% filter(origin == "Lab"))
library(mice)
library(tidyr)
library(tidyverse)
library(VIM)
library(fitdistrplus)
library(fitur)
library(visdat)
library(corrplot)
library(dplyr)
length(hm %>% filter(origin == "Lab"))
View(hm)
length(hm %>% filter(origin == "Lab", infection == "challenge",
Position == "mLn", dpi == "8"))
View(hm)
length(hm %>% filter(origin == "Field"))
length(hm %>% filter(origin == "Field"))
setwd("~/GitHub/Eimeria_mouse_immunity/")
hm <- read.csv("output_data/1.MICE_cleaned_data.csv")
# Vectors for selecting genes
#Lab genes
# The measurements of IL.12 and IRG6 are done with an other assay and will
#ignore for now
Gene_lab   <- c("IFNy", "CXCR3", "IL.6", "IL.13", "IL.10",
"IL1RN","CASP1", "CXCL9", "IDO1", "IRGM1", "MPO",
"MUC2", "MUC5AC", "MYD88", "NCR1", "PRF1", "RETNLB", "SOCS1",
"TICAM1", "TNF") #"IL.12", "IRG6")
Genes_wild   <- c("IFNy", "CXCR3", "IL.6", "IL.13", "IL.10",
"IL1RN","CASP1", "CXCL9", "IDO1", "IRGM1", "MPO",
"MUC2", "MUC5AC", "MYD88", "NCR1", "PRF1", "RETNLB", "SOCS1",
"TICAM1", "TNF") #, "IL.12", "IRG6")
Facs_lab <- c("CD4", "Treg", "Div_Treg", "Treg17", "Th1",
"Div_Th1", "Th17", "Div_Th17", "CD8", "Act_CD8",
"Div_Act_CD8", "IFNy_CD4", "IFNy_CD8","Treg_prop",
"IL17A_CD4")
Facs_wild <- c( "Treg", "CD4", "Treg17", "Th1", "Th17", "CD8")
# data imputation
# Genes
field <- hm %>%
dplyr::filter(origin == "Field")
field <- unique(field)
genes_mouse_field <- field %>%
dplyr::select(c(Mouse_ID, all_of(Genes_wild)))
genes <- genes_mouse_field  %>%
dplyr::select(-Mouse_ID)
#remove rows with only nas
genes <- genes[,colSums(is.na(genes))<nrow(genes)]
#remove colums with only nas
genes <- genes[rowSums(is.na(genes)) != ncol(genes), ]
genes_mouse_field <- genes_mouse_field[row.names(genes), ]
##select same rows in the first table
field <- field[row.names(genes), ]
###############lab
#select the genes and lab muce
lab <- hm %>%
dplyr::filter(origin == "Lab", Position == "mLN") #selecting for mln to avoid
# duplicates
lab <- unique(lab)
gene_lab_mouse <- lab %>%
dplyr::select(c(Mouse_ID, all_of(Gene_lab)))
gene_lab_mouse <- unique(gene_lab_mouse)
genes_lab <- gene_lab_mouse[, -1]
#remove rows with only nas
genes_lab <- genes_lab[,colSums(is.na(genes_lab))<nrow(genes_lab)]
#remove colums with only nas
genes_lab <- genes_lab[rowSums(is.na(genes_lab)) != ncol(genes_lab), ]
genes_lab <- unique(genes_lab)
#select same rows in the first table
gene_lab_mouse <- gene_lab_mouse[row.names(genes_lab), ]
##select same rows in the first table
lab <- lab[row.names(genes_lab), ]
hm_genes <- rbind(gene_lab_mouse, genes_mouse_field)
hm_selection_g <- rbind(lab, field)
genes <- hm_genes %>%
dplyr::select(-Mouse_ID)
# looking at patterns of nas
#pattern_na <-as.data.frame(md.pattern(field_genes))
sapply(hm_genes, function(x) sum(is.na(x)))
#had to remove as they were disturbing the imputation: Worms_presence, MC.Eimeria.FEC,  Heligmosomoides_polygurus, Zfy2, Y,  MpiC,
#vis_miss(field)
# The frequency distribution of the missing cases per variable can be obtained
# as:
init <- mice(genes, maxit = 0)
#we want to impute only the specific variables
meth <- init$method
aggr_plot <- aggr(hm_genes, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(hm_genes), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
marginplot(hm_genes[c(4,5)])
# m=5 refers to the number of imputed datasets. Five is the default value.
igf <- mice(genes, m = 5, seed = 500) # method = meth,
summary(igf)
# to check each column with imputed data
## igf$imp$IFNy
#Now we can get back the completed dataset using the complete()
complete_genes <- complete(igf, 1)
#sapply(complete_field, function(x) sum(is.na(x)))
#visualize missingness
vis_dat(complete_genes)
#remove the non imputed genes from our data set
hm_selection_g <- hm_selection_g %>%
dplyr::select(-c("IFNy", "CXCR3", "IL.6", "IL.13", "IL.10",
"IL1RN","CASP1", "CXCL9", "IDO1", "IRGM1", "MPO",
"MUC2", "MUC5AC", "MYD88", "NCR1", "PRF1", "RETNLB", "SOCS1",
"TICAM1", "TNF"))
# add the new imputed genes to the data
hm_selection_g <- cbind(hm_selection_g, complete_genes)
xyplot(igf, IFNy ~ IL.13 + IRGM1 + MUC2, pch=18,cex=1)
xyplot(igf,IFNy ~ IL.10 + PRF1 + CASP1, pch=18,cex=1)
###############lab
#select the facs and lab muce
lab <- hm %>%
dplyr::filter(origin == "Lab", Position == "mLN") #selecting for mln to avoid
# duplicates
lab <- unique(lab)
facs_mouse <- lab %>%
dplyr::select(c(Mouse_ID, all_of(Facs_lab))) #choosing the same with the wild
facs_mouse <- unique(facs_mouse)
facs_lab <- facs_mouse[, -1]
#remove rows with only nas
facs_lab <- facs_lab[,colSums(is.na(facs_lab))<nrow(facs_lab)]
#remove colums with only nas
facs_lab <- facs_lab[rowSums(is.na(facs_lab)) != ncol(facs_lab), ]
#select same rows in the first table
facs_mouse <- facs_mouse[row.names(facs_lab), ]
##select same rows in the first table
lab <- lab[row.names(facs_mouse), ]
#########################Field
###########field
# somehow the field samples have the origin na,
# fix that
field <- hm %>%
dplyr::filter(origin == "Field")
field <- unique(field)
facs_mouse <- field %>%
dplyr::select(c(Mouse_ID, all_of(Facs_wild)))
facs_field <- facs_mouse[,-1]
#remove rows with only nas
facs_field <- facs_field[,colSums(is.na(facs_field))<nrow(facs_field)]
#remove colums with only nas
facs_field <- facs_field[rowSums(is.na(facs_field)) != ncol(facs_field), ]
##select same rows in the first table
field <- field[row.names(facs_field), ]
facs_data <- full_join(lab, field, by = intersect(colnames(lab), colnames(field)))
facs_data <- unique(facs_data) %>%
dplyr::select(-c("IFNy", "CXCR3", "IL.6", "IL.13", "IL.10",
"IL1RN","CASP1", "CXCL9", "IDO1", "IRGM1", "MPO",
"MUC2", "MUC5AC", "MYD88", "NCR1", "PRF1", "RETNLB", "SOCS1",
"TICAM1", "TNF"))
hm_selection_g <- hm_selection_g %>%
full_join(facs_data, by = intersect(colnames(facs_data), colnames(hm_selection_g)))
hm_selection_g <- unique(hm_selection_g)
View(hm_selection_g)
sum(hm_selectiion_g[, origin == "Field"])
sum(hm_selectiion_g %>% origin == "Field")
sum(hm_selectiion_g %>% filter(origin == "Field")
)
hm_selection_g
View(facs_data)
View(facs_lab)
View(genes_lab)
View(hm_selection_g)
hm_selection_g$Year
unique(hm_selection_g$Year)
View(facs_mouse)
sota <- read.csv("https://raw.githubusercontent.com/derele/Mouse_Eimeria_Field/master/data_products/SOTA_Data_Product.csv")
sota <- sota %>% filter(Year == c("2016", "2017", "2018", "2019"))
sota <- read.csv("https://raw.githubusercontent.com/derele/Mouse_Eimeria_Field/master/data_products/SOTA_Data_Product.csv")
View(sota)
sota <- sota %>% filter(Year == c(2016, 2017, 2018, 2019))
sota <- read.csv("https://raw.githubusercontent.com/derele/Mouse_Eimeria_Field/master/data_products/SOTA_Data_Product.csv")
sota <- sota %>% filter(Year %>% c("2016", "2017")
)
rlang::last_error()
typeof(sota$Year)
sota <- sota %>% filter(Year %>% c("2016", "2017")
sota <- sota %>% filter(Year %>% c("2016", "2017")
sota <- sota %>% filter(Year %>% c(2016, 2017)
)
sota[Year %in% 2017]
sota[Year %in% 2017,]
filter(.data = sota, Year == 2016:2019)
filter(.data = sota, Year > 2016 | Year < 2019)
filter(.data = sota, Year > 2016 | Year < 2019) > sota2
filter(.data = sota, Year > 2016 | Year < 2019) -> sota2
length(unique(Genes_wild))
